# comments are allowed in any place and start with a hash (#)

# Top relay to split the load between the go-carbons
# 
<% cluster_type = p("carbon-c-relay.lb") %>

# Configure clusters of type forward, any_of or failover
<% if ['forward', 'any_of', 'failover'].include? cluster_type.to_s %>
cluster <%= name %>-<%= index %>
  <%= cluster_type %>
  <% if_link('relay') do |link| %>
      <%- link.instances.each do |instance| %>
        <%= instance.address %>:<%= link.p("carbon_c_relay.port") %>
      <% end -%>
  <% end %>
<% end %>

# Configure clusters of type carbon_ch, fnv1a_ch, jump_fnv1a_ch
<% if ['carbon_ch', 'fnv1a_ch', 'jump_fnv1a_ch'].include? cluster_type.to_s %>
cluster <%= name %>-<%= index %>
  <%= cluster_type %> replication <%= p("carbon-c-relay.replication") %>
  <%- if_link('go-carbon-tcp') do |link|%>
    <%- if link.p("go-carbon.tcp.enabled") == true %>
      <%- link.instances.each do |instance| %>
        <%= instance.address %>:<%= link.p("go-carbon.tcp_listen") %>=<%= instance.index %> proto tcp
      <% end -%>
    <% end %>
  <% end -%>

  <%- if_link('go-carbon-udp') do |link| %>
    <%- if link.p("go-carbon.udp.enabled") == true %>
      <%- link.instances.each do |instance| %>
        <%= instance.address %>:<%= link.p("go-carbon.udp.port") %> proto udp
      <% end -%>
    <% end -%>
  <% end %>

<% end %>
;

# Optional other external clusters defined by the users
<% p('carbon-c-relay.ext_clusters').each do |cluster| %>
cluster <%= cluster["name"] %>
  <%= cluster["lb"] %> <% if cluster["replication"] %>replication <%= cluster["replication"] %><% end %>
  <% cluster["backends"].each do |backend| %>
        <%= backend["host"] %><% if backend["port"] %>:<%= backend["port"] %><% end %><% if backend["instance"] %>=<%= backend["instance"] %><% end %> <% if backend["proto"] %>proto <%= backend["proto"] %><% end %>
  <% end %>
;
<% end %>


# Optional rules to regex and send data to external clusters
<% p('carbon-c-relay.ext_rules').each do |rule| %>
match <%= rule["regex"] %>
  send to <%= rule["dst"] %>
  <% if rule["stop"] %>stop<% end %>
;
<% end %>


# Optional rewrite rules
<% p('carbon-c-relay.rewrite').each do |rule| %>
rewrite <%= rule["regex"] %>
  into <%= rule["into"] %>
;
<% end %>


# Send everything to the backends!
match * 
  send to <%= name %>-<%= index %>
  stop
;
